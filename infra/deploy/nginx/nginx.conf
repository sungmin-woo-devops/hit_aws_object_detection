# Nginx worker 프로세스 수 설정 (auto로 설정하면 CPU 코어 수에 맞게 자동 조정)
worker_processes auto;

# 전역 에러 로그 파일 설정
error_log /var/log/nginx/error.log warn;

# 이벤트 모델 설정
events {
    # 워커당 최대 연결 수
    worker_connections 1024;
}

# HTTP 서버 설정 시작
http {
    # 기본 MIME 타입 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 클라이언트와 서버 간의 연결 유지 시간
    keepalive_timeout 65;

    # Nginx가 파일 전송을 최적화하도록 설정
    sendfile on;

    # upstream 서버 정의 (Label Studio)
    upstream label_studio_app {
        server app:8000;
    }

    # 서버 블록 정의 (MinIO 프록시)
    server {
        # 80번 포트에서 모든 IP 주소로부터의 연결을 수신
        listen 80;
        server_name localhost;

        # 최대 요청 본문 크기 설정 (파일 업로드를 위해 필요)
        client_max_body_size 0; # 0은 무제한을 의미합니다.

        # 모든 URI에 대한 프록시 설정
        location / {
            # CORS (교차 출처 리소스 공유) 헤더 설정
            # OPTIONS 메소드는 CORS 사전 요청을 위한 것이므로 204 No Content로 응답
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                return 204;
            }
            
            # 일반적인 요청에 대한 CORS 헤더
            # 'always'는 모든 응답에 헤더를 추가하도록 강제합니다.
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range,ETag,x-amz-server-side-encryption' always;

            # MinIO로 요청을 프록시
            proxy_pass http://minio:9000;
            
            # 프록시 요청에 필요한 헤더 설정
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            
            # 버퍼링 설정 비활성화 (스트리밍에 유리)
            proxy_buffering off;
        }
    }
    
    # 서버 블록 정의 (Label Studio 웹 UI 프록시)
    server {
        listen 8085;
        server_name localhost;
        client_max_body_size 100M;
        location / {
            proxy_pass http://label_studio_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 90;
        }

        location /static/ {
            alias /label-studio/data/media/static/;
        }
    }
}
